---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cilium
  namespace: kube-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.cilium.io
      chart: cilium
      version: 1.14.0-snapshot.4
      sourceRef:
        kind: HelmRepository
        name: cilium-charts
        namespace: flux-system
      interval: 5m
  values:
    # cluster:
    #   name: "${CLUSTER_NAME}"
    #   id: "${CLUSTER_ID}"
    # policyEnforcementMode: "never"
    rollOutCiliumPods: true
    localRedirectPolicy: true
    kubeProxyReplacement: "strict"
    kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
    ipv4NativeRoutingCIDR: "${NETWORK_K8S_CLUSTER_CIDR}"
    nativeRoutingCIDR: "${NETWORK_K8S_CLUSTER_CIDR}"
    autoDirectNodeRoutes: true
    k8sServiceHost: "${CONTROL_PLANE_ENDPOINT}"
    k8sServicePort: 6443
    bpf:
      masquerade: true
      tproxy: true

    loadBalancer:
      algorithm: "maglev"
      mode: "dsr"
    tunnel: "disabled"
    ipam:
      mode: "kubernetes"
    operator:
      rollOutPods: true
    containerRuntime:
      integration: containerd
    endpointRoutes:
      enabled: true
    hubble:
      enabled: true
      serviceMonitor:
        enabled: true
      metrics:
        enabled:
          - dns:query;ignoreAAAA
          - drop
          - tcp
          - flow
          - port-distribution
          - icmp
          - http
      relay:
        enabled: true
        rollOutPods: true
        prometheus:
          serviceMonitor:
            enabled: true
      ui:
        enabled: true
        rollOutPods: true
        ingress:
          enabled: true
          className: traefik
          annotations:
            hajimari.io/enable: "true"
            hajimari.io/appName: "Cilium Dashboard"
            hajimari.io/icon: "cilium"
            hajimari.io/group: "networking"
            traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
            traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
          hosts:
            - &host "hubble.home.${SECRET_DOMAIN}"
          tls:
            - secretName: "wildcard-internal-${SECRET_DOMAIN/./-}-tls"
              hosts:
                - *host

      dashboards:
        enabled: true
        label: grafana_dashboard
        namespace: monitoring
        labelValue: "1"
        annotations: {}

    bgpControlPlane:
      enabled: true
    bgp:
      enabled: false
      announce:
        loadbalancerIP: true
        podCIDR: false
    cgroup:
      autoMount:
        enabled: false
      hostRoot: /sys/fs/cgroup

    socketLB:
      enabled: true
      hostNamespaceOnly: true

    securityContext:
      # -- Run the pod with elevated privileges
      privileged: false

      capabilities:
        # -- Capabilities for the `cilium-agent` container
        ciliumAgent:
          # Use to set socket permission
          - CHOWN
          # Used to terminate envoy child process
          - KILL
          # Used since cilium modifies routing tables, etc...
          - NET_ADMIN
          # Used since cilium creates raw sockets, etc...
          - NET_RAW
          # Used since cilium monitor uses mmap
          - IPC_LOCK
          # Used in iptables. Consider removing once we are iptables-free
          # - SYS_MODULE
          # We need it for now but might not need it for >= 5.11 specially
          # for the 'SYS_RESOURCE'.
          # In >= 5.8 there's already BPF and PERMON capabilities
          - SYS_ADMIN
          # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
          - SYS_RESOURCE
          # Both PERFMON and BPF requires kernel 5.8, container runtime
          # cri-o >= v1.22.0 or containerd >= v1.5.0.
          # If available, SYS_ADMIN can be removed.
          #- PERFMON
          #- BPF
          # Allow discretionary access control (e.g. required for package installation)
          - DAC_OVERRIDE
          # Allow to set Access Control Lists (ACLs) on arbitrary files (e.g. required for package installation)
          - FOWNER
          # Allow to execute program that changes GID (e.g. required for package installation)
          - SETGID
          # Allow to execute program that changes UID (e.g. required for package installation)
          - SETUID
        # -- Capabilities for the `mount-cgroup` init container
        mountCgroup:
          # Only used for 'mount' cgroup
          - SYS_ADMIN
          # Used for nsenter
          - SYS_CHROOT
          - SYS_PTRACE
        # -- capabilities for the `apply-sysctl-overwrites` init container
        applySysctlOverwrites:
          # Required in order to access host's /etc/sysctl.d dir
          - SYS_ADMIN
          # Used for nsenter
          - SYS_CHROOT
          - SYS_PTRACE
        # -- Capabilities for the `clean-cilium-state` init container
        cleanCiliumState:
          # Most of the capabilities here are the same ones used in the
          # cilium-agent's container because this container can be used to
          # uninstall all Cilium resources, and therefore it is likely that
          # will need the same capabilities.
          # Used since cilium modifies routing tables, etc...
          - NET_ADMIN
          # Used in iptables. Consider removing once we are iptables-free
          # - SYS_MODULE
          # We need it for now but might not need it for >= 5.11 specially
          # for the 'SYS_RESOURCE'.
          # In >= 5.8 there's already BPF and PERMON capabilities
          - SYS_ADMIN
          # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
          - SYS_RESOURCE
          # Both PERFMON and BPF requires kernel 5.8, container runtime
          # cri-o >= v1.22.0 or containerd >= v1.5.0.
          # If available, SYS_ADMIN can be removed.
          #- PERFMON
          #- BPF
