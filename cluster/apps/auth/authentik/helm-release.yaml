---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: auth
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io/
      chart: authentik
      version: 2023.5.4
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  dependsOn:
    - name: postgres
      namespace: databases
    - name: smtp-relay
      namespace: system
  values:
    replicas: 2

    # image:
    #   tag: 2022.5.3

    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8
        env:
          - name: POSTGRES_HOST
            value: postgres-rw.databases.svc.cluster.local.
          - name: POSTGRES_DB
            value: authentik
          - name: POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: password
          - name: POSTGRES_SUPER_USER
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: username
          - name: POSTGRES_USER
            value: 'authentik'
          - name: POSTGRES_PASS
            value: "${AUTHENTIK_DB_PASS}"

    authentik:
      secret_key: "${AUTHENTIK_KEY}"
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.beryju.org, and is fully opt-in
      error_reporting:
        enabled: false
      disable_startup_analytics: true
      postgresql:
        host: postgres-rw.databases.svc.cluster.local
        port: 5432
        name: authentik
        user: authentik
        password: "${AUTHENTIK_DB_PASS}"

      email:
        host: smtp-relay.system.svc.cluster.local.
        port: 2525
        use_ssl: true
        from: "Authentik <auth@${SECRET_DOMAIN}>"

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
        external-dns/is-public: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        # traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
        hajimari.io/enable: "true"
        hajimari.io/icon: "shield-lock"
        hajimari.io/group: "Home"
      hosts:
        - host: &host "auth.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
          secretName: "wildcard-${SECRET_DOMAIN/./-}-tls"

    prometheus:
      rules:
        create: true
      serviceMonitor:
        create: true

    postgresql:
      enabled: false
      # enabled: true
      # persistence:
      #   existingClaim: authentik-pgsql-db
      # postgresqlPassword: "${AUTHENTIK_DB_PASS}"

    redis:
      enabled: true
      master:
        persistence:
          existingClaim: authentik-redis-db
