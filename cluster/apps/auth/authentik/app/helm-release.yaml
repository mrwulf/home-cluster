---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io/
      chart: authentik
      version: 2025.2.4
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
  values:
    authentik:
      secret_key: "${AUTHENTIK_KEY}"
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.beryju.org, and is fully opt-in
      error_reporting:
        enabled: false
      disable_startup_analytics: true
      postgresql:
        host: postgres-rw.databases.svc.cluster.local
        port: 5432
        name: authentik
        user: authentik
        password: "${AUTHENTIK_DB_PASS}"

      email:
        host: smtp-relay.system.svc.cluster.local.
        port: 2525
        use_ssl: false
        from: "Authentik <auth@${SECRET_DOMAIN}>"

      redis:
        host: dragonfly.databases.svc.cluster.local
        db: 1

    server:
      replicas: 3
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.4
          env:
            - name: INIT_POSTGRES_HOST
              value: postgres-rw.databases.svc.cluster.local.
            - name: INIT_POSTGRES_DBNAME
              value: authentik
            - name: INIT_POSTGRES_SUPER_PASS
              valueFrom:
                secretKeyRef:
                  name: postgres-superuser
                  key: password
            - name: INIT_POSTGRES_SUPER_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-superuser
                  key: username
            - name: INIT_POSTGRES_USER
              value: 'authentik'
            - name: INIT_POSTGRES_PASS
              value: "${AUTHENTIK_DB_PASS}"
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            memory: 1Gi
      metrics:
        serviceMonitor:
          enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN:=domain}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "shield-lock"
          hajimari.io/group: "Home"
        hosts:
          - &host "auth.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - *host
            secretName: "wildcard-${SECRET_DOMAIN/./-}-tls"

    worker:
      replicas: 2
      resources:
        requests:
          cpu: 50m
          memory: 512Mi
        limits:
          memory: 1Gi
    prometheus:
      rules:
        enabled: true

    postgresql:
      enabled: false
