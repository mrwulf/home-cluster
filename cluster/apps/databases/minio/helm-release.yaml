---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: databases
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
      replicas: 1
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2022-12-12T19-27-27Z
    env:
      TZ: "${TIMEZONE}"
      MINIO_UPDATE: "off"
      MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
      MINIO_PROMETHEUS_JOB_ID: minio
      MINIO_BROWSER_REDIRECT_URL: "https://minio.home.${SECRET_DOMAIN}"
      MINIO_SERVER_URL: "https://cdn.${SECRET_DOMAIN}"
    envFrom:
      - secretRef:
          name: minio-secret
    args: ["server", "/data", "--console-address", ":9001"]
    service:
      main:
        enabled: true
        ports:
          http:
            port: &console-port 9001
          api:
            enabled: true
            port: &api-port 9000
    # https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-prometheus.html
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: api
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
            bearerTokenSecret:
              name: minio-secret
              key: MINIO_PROMETHEUS_TOKEN
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
          hajimari.io/icon: mdi:pail
          hajimari.io/enable: "true"
        hosts:
          - host: &console-host "{{ .Release.Name }}.home.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *console-port
        tls:
          - secretName: "wildcard-internal-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *console-host
      s3:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
          # traefik.ingress.kubernetes.io/router.middlewares: "networking-authentik@kubernetescrd"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          hajimari.io/enable: "false"
        hosts:
          - host: &api-host "cdn.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *api-port
        tls:
          - secretName: "wildcard-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *api-host
    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 568
    #   fsGroup: 568
    #   fsGroupChangePolicy: "OnRootMismatch"
    #   supplementalGroups:
    #     - 100
    persistence:
      config:
        enabled: true
        # existingClaim: minio-nfs
        mountPath: /data
        type: nfs
        server: "${PRIMARY_NFS_SERVER}"
        path: "${NFS_KUBERNETES_PATH}/active/minio"
        mountOptions:
          - nfsvers=4
          - nconnect=8
          - hard
          - noatime
          # - nfsvers=4.2

    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
