---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: household
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: databases

  values:
    initContainers:
      01-init-db:
        image: ghcr.io/haraldkoch/postgres-init:16.1
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - configMapRef:
              name: &configMap immich-configmap
          - secretRef:
              name: &secret immich-secret
    controller:
      replicas: 2
      strategy: RollingUpdate
      annotations:
        configmap.reloader.stakater.com/reload: *configMap
        secret.reloader.stakater.com/reload: *secret

    image:
      repository: ghcr.io/immich-app/immich-server
      tag: v1.93.2

    args: ["start-server.sh"]
    env:
      NODE_OPTIONS: "--max-old-space-size=8192"
    envFrom: *envFrom
    service:
      main:
        ports:
          http:
            port: 3001
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: Immich
          hajimari.io/group: "Home"
          hajimari.io/icon: heroicons:photo
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-immich@kubernetescrd"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns/is-public: "true"
        hosts:
          - host: &host photos.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: immich-server
                  port: 3001
        tls:
          - hosts:
              - *host
            secretName: "wildcard-${SECRET_DOMAIN/./-}-tls"
    probes:
      liveness:
        enabled: false
      startup:
        enabled: false
    persistence:
      library:
        enabled: true
        mountPath: /usr/src/app/upload
        type: nfs
        server: "${PRIMARY_NFS_SERVER}"
        path: "/volume3/Pictures/immich"
        mountOptions:
          - nfsvers=4
          - nconnect=8
          - hard
          - noatime
      memories:
        enabled: true
        mountPath: /mnt/memories
        type: nfs
        server: "${PRIMARY_NFS_SERVER}"
        path: "/volume3/Pictures"
        mountOptions:
          - nfsvers=4
          - nconnect=8
          - hard
          - noatime

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node.home.arpa/physical
                  operator: In
                  values:
                    - "true"

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app

    resources:
      requests:
        cpu: 100m
        memory: 512M
      limits:
        memory: 8G
