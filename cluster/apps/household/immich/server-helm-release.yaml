---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: household
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: databases

  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/haraldkoch/postgres-init
              tag: 16.4
            envFrom:
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.120.1
            env:
              NODE_OPTIONS: "--max-old-space-size=8192"
              IMMICH_WORKERS_INCLUDE: "api"
            envFrom:
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /server/ping
                    port: 3001
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 512M
              limits:
                memory: 8G

    service:
      main:
        controller: main
        ports:
          http:
            port: 3001

    ingress:
      main:
        className: traefik
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: Immich
          hajimari.io/group: "Home"
          hajimari.io/icon: heroicons:photo
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-immich@kubernetescrd"
          external-dns.alpha.kubernetes.io/target: "${DDNS_TARGET:=domain}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns/is-public: "true"
        hosts:
          - host: &host photos.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "wildcard-${SECRET_DOMAIN/./-}-tls"

    persistence:
      library:
        type: nfs
        server: "${CORE_NFS_SERVER:=nas0}"
        path: "/mnt/user/Photos/immich"
        globalMounts:
          - path: /usr/src/app/upload
      memories:
        type: nfs
        server: "${CORE_NFS_SERVER:=nas0}"
        path: "/mnt/user/Photos"
        globalMounts:
          - path: /mnt/memories
