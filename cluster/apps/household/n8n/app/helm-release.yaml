---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app n8n
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      n8n:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: 1.115.2
            env:
              DB_SQLITE_VACUUM_ON_STARTUP: true
              EXECUTIONS_DATA_PRUNE: true
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
              GENERIC_TIMEZONE: "${TZ}"
              N8N_DIAGNOSTICS_ENABLED: false
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_PROTOCOL: "https"
              N8N_PORT: &port 8080
              N8N_HOST: &host "{{ .Release.Name }}.home.${SECRET_DOMAIN}"
              N8N_LOG_LEVEL: info
              N8N_LOG_OUTPUT: console
              N8N_ENCRYPTION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: n8n
                    key: N8N_ENCRYPTION_KEY
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 2Gi

    service:
      app:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
          hajimari.io/enable: "true"
          gatus.io/enabled: "true"
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls:
          - secretName: "wildcard-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *host
      webhook:
        enabled: true
        className: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN:=domain}"
          hajimari.io/enable: "true"
          gatus.io/enabled: "true"
        hosts:
          - host: &exthost "{{ .Release.Name }}-webhook.${SECRET_DOMAIN}"
            paths:
              - path: /webhook
                service:
                  identifier: app
                  port: http
        tls:
          - secretName: "wildcard-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *exthost

    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          n8n:
            app:
              - path: /home/node/.n8n

    # route:
    #   app:
    #     hostnames:
    #       - *hostName
    #     parentRefs:
    #       - name: internal
    #         namespace: kube-system
    #         sectionName: https

    #   webhooks:
    #     hostnames:
    #       - "{{ .Release.Name }}-webhook.${SECRET_DOMAIN}"
    #     parentRefs:
    #       - name: external
    #         namespace: kube-system
    #         sectionName: https
    #     rules:
    #       - matches:
    #           - path:
    #               value: /webhook
    #         backendRefs: [{}]
