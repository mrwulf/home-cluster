---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: radarr
      version: 16.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: ghcr.io/k8s-at-home/radarr
      tag: rolling

    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      # fsGroup: 977

    env:
      TZ: "${TIMEZONE}"
      PUID: 985
      PGID: 977

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
        hosts:
          - host: &host "radarr.home.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "wildcard-internal-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *host

    resources:
      requests:
        cpu: 15m
        memory: 1312M
      limits:
        memory: 4655M

    persistence:
      config:
        enabled: true
        existingClaim: radarr-config
      downloads:
        enabled: true
        mountPath: /downloads
        type: custom
        volumeSpec:
          nfs:
            server: ourbackup.home
            path: /volume1/k8s-storage/active/media-downloaded
      movies:
        enabled: true
        mountPath: /Movies
        type: custom
        volumeSpec:
          nfs:
            server: ourshare.home
            path: /volume1/Shared Videos/Movies

      backups:
        enabled: true
        mountPath: /config/Backups
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_KUBERNETES_PATH}/backups/radarr"

    metrics:
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.1.0
        env:
          port: 9794
          additionalMetrics: true
          unknownQueueItems: true
