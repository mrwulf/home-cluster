---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: audiobookshelf
  namespace: media
spec:
  releaseName: audiobookshelf
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: audiobookshelf
      version: 1.2.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: traefik
      namespace: networking
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/advplyr/audiobookshelf
      tag: 2.2.23

    env:
      TZ: "${TIMEZONE}"

    dnsConfig:
      options:
        - name: ndots
          value: "1"

    ingress:
      main:
        # primary: true
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/group: "Media"
          # external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hosts:
          - host: &host "audiobookshelf.home.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "wildcard-internal-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: audiobookshelf-config
        mountpath: /config
      metadata:
        enabled: true
        existingClaim: audiobookshelf-metadata
        mountpath: /metadata
      audiobooks:
        enabled: true
        mountPath: /audiobooks
        type: nfs
        server: "${PRIMARY_NFS_SERVER}"
        path: "${NFS_KUBERNETES_PATH}/active/audiobooks"
      books:
        enabled: true
        mountPath: /books
        type: nfs
        server: "${PRIMARY_NFS_SERVER}"
        path: "${NFS_KUBERNETES_PATH}/active/books"
      backups:
        enabled: true
        mountPath: /metadata/backups
        type: nfs
        server: "${PRIMARY_NFS_SERVER}"
        path: "${NFS_KUBERNETES_PATH}/backups/audiobookshelf"
