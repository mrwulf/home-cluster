---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          dnsConfig:
            options:
              - name: ndots
                value: "1"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            supplementalGroups: [10000]
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: '4.0.9.2342'
            env:
              TZ: "${TIMEZONE}"
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__AUTH__APIKEY: "${SONARR_APIKEY}"
              SONARR__PORT: &port 8989
              SONARR__APPLICATION_URL: "https://sonarr.home.${SECRET_DOMAIN}"
              SONARR__LOG_LEVEL: info
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 22m
                memory: 1G
              limits:
                memory: 4G

    service:
      main:
        controller: main
        ports:
          http:
            port: *port

    ingress:
      main:
        className: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/group: "Media"
          hajimari.io/icon: mdi:television-classic
        hosts:
          - host: &host "sonarr.home.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - secretName: "wildcard-internal-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *host

    persistence:
      config:
        existingClaim: sonarr-config
      downloads:
        type: nfs
        server: "${CORE_NFS_SERVER:=nas0}"
        path: /mnt/user/k8s/media-downloaded
      tv:
        type: nfs
        server: "${CORE_NFS_SERVER:=nas0}"
        path: "/mnt/user/TV"
        globalMounts:
          - path: /TVShows
      backups:
        type: nfs
        server: "${CORE_NFS_SERVER:=nas0}"
        path: "/mnt/user/backups/sonarr"
        globalMounts:
          - path: /config/Backups
