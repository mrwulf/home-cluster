---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.3.6
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 30m
  install:
    crds: Skip
  upgrade:
    crds: Skip
  values:
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true

    ###
    ### Component values
    ###
    alertmanager:
      enabled: false

    kubeApiServer:
      enabled: true
      serviceMonitor:
        selector:
          k8s-app: kube-apiserver
#       metricRelabelings:
#         # Drop high cardinality labels
#         - action: drop
#           sourceLabels: ["__name__"]
#           regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
#         - action: drop
#           sourceLabels: ["__name__"]
#           regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler
    kubeControllerManager: &kubeControllerManager
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeEtcd:
      <<: *kubeControllerManager # etcd runs on control plane nodes    kubelet:
      enabled: true
      # serviceMonitor:
      #   metricRelabelings:
      #     # Drop high cardinality labels
      #     - action: labeldrop
      #       regex: (uid)
      #     - action: labeldrop
      #       regex: (id|name)
      #     - action: drop
      #       sourceLabels: ["__name__"]
      #       regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeProxy:
      enabled: false

    kubeStateMetrics:
      enabled: false

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: [__meta_kubernetes_pod_node_name]
              targetLabel: kubernetes_node

    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes

    ###
    ### Prometheus operator values
    ###
    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M

      prometheusConfigReloader:
        # resource config for prometheusConfigReloader
        resources:
          requests:
            cpu: 5m
            memory: 32M
          limits:
            memory: 32M

    ###
    ### Prometheus instance values
    ###
    prometheus:
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
          gatus.io/enabled: "true"
        hosts:
          - &host "prom.home.${SECRET_DOMAIN}"
        tls:
          - secretName: "wildcard-internal-${SECRET_DOMAIN/./-}-tls"
            hosts:
              - *host
        pathType: Prefix

      prometheusSpec:
        alertingEndpoints:
          - namespace: monitoring
            name: alertmanager
            port: 9093
            apiVersion: v2
        enableAdminAPI: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicas: 1
        replicaExternalLabelName: "__replica__" # must match with thanos value `.query.replicaLabel[0]`
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2000M
        retention: 14d
        retentionSize: 50GB
        ruleselectorniluseshelmvalues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 55Gi
        walCompression: true
