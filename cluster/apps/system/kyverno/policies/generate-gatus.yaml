---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: generate-gatus
  annotations:
    policies.kyverno.io/title: Generate gatus endpoints
    policies.kyverno.io/category: Monitoring
    policies.kyverno.io/severity: low
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy will automatically generate gatus endpoints for
      all Ingresses with the annotation `gatus.io/enabled: "true"`.
    pod-policies.kyverno.io/autogen-controllers: none
spec:
  generateExisting: true
  rules:
    - name: generate-gatus
      match:
        any:
          - resources:
              kinds:
                - Ingress
              annotations:
                gatus.io/enabled: "true"
      context:
        - name: GATUS_HOST
          variable:
            value: '{{ request.object.metadata.annotations."gatus.io/host" || request.object.spec.rules[0].host }}'
            jmesPath: "to_string(@)"
        - name: GATUS_NAME
          variable:
            value: '{{ request.object.metadata.annotations."gatus.io/name" || request.object.metadata.name }}'
            jmesPath: "to_string(@)"
        - name: GATUS_GROUP
          variable:
            value: '{{ contains(request.object.spec.rules[0].host, ''.home.'' ) &&  ''internal''  || ''external'' }}'
            jmesPath: "to_string(@)"
        - name: GATUS_OBFUSCATE
          variable:
            value: '{{ contains( GATUS_GROUP, ''internal'' ) }}'
        - name: GATUS_EXTERNAL_RESOLVER
          variable:
            jmesPath: '((contains( GATUS_GROUP, ''internal'' ) || contains( request.object.metadata.annotations."external-dns.alpha.kubernetes.io/cloudflare-proxied", ''false'')) && '''') || ''tcp://10.0.0.1:53053'' '
        - name: GATUS_EXTERNAL_DNS
          variable:
            value:
              dns-resolver: '{{ GATUS_EXTERNAL_RESOLVER }}'
            # jmesPath:
        - name: GATUS_PATH
          variable:
            value: '{{ request.object.metadata.annotations."gatus.io/path" || '''' }}'
            jmesPath: "to_string(@) || ''"
        - name: GATUS_STATUS_CODE
          variable:
            value: '{{ request.object.metadata.annotations."gatus.io/status-code" || `200` }}'
            jmesPath: "to_string(@)"
        - name: GATUS_INTERVAL
          variable:
            value: '{{ request.object.metadata.annotations."gatus.io/interval" || ''1m'' }}'
            jmesPath: "to_string(@)"
      generate:
        apiVersion: v1
        kind: ConfigMap
        name: "{{ request.object.metadata.name }}-gatus-ep"
        namespace: "{{ request.object.metadata.namespace }}"
        synchronize: true
        data:
          kind: ConfigMap
          metadata:
            labels:
              gatus.io/enabled: "true"
          data:
            config.yaml: |-
              ---
              endpoints:
                - name: {{ GATUS_NAME }}
                  url: https://{{ GATUS_HOST }}{{ GATUS_PATH }}
                  interval: {{ GATUS_INTERVAL }}
                  group: {{ GATUS_GROUP }}
                  client: {{ GATUS_EXTERNAL_DNS }}
                  conditions:
                    - "[STATUS] == {{ GATUS_STATUS_CODE }}"
                  ui:
                    hide-hostname: {{ GATUS_OBFUSCATE }}
                    hide-url: {{ GATUS_OBFUSCATE }}
