---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: talos-v1
# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.9.2
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.31.4
endpoint: https://kubernetes.home:6443

additionalApiServerCertSans: &sans
  - ${clusterEndpointIP}
  - 127.0.0.1
  - 10.0.0.201

additionalMachineCertSans: *sans

domain: cluster.local

cniConfig:
  name: none

# cniConfig:
#   name: custom
#   urls:
#     - https://raw.githubusercontent.com/budimanjojo/home-cluster/main/talos/cilium.yaml
#     - https://raw.githubusercontent.com/budimanjojo/home-cluster/main/talos/configmap.yaml
nodes:
  - hostname: worker-01.home
    ipAddress: 10.0.1.45
    installDiskSelector:
      type: ssd
    networkInterfaces: &workerNetwork
      - interface: eth0
        dhcp: true
        mtu: 9000
      - interface: eth1
        dhcp: true
        mtu: 9000
    nodeLabels: &workerNodeLabels
      node.home.arpa/physical: "true"
      node-role.kubernetes.io/worker: ''
  - hostname: control-01.home
    ipAddress: 10.0.1.48
    controlPlane: true
    installDiskSelector:
      size: '< 1TB'
    networkInterfaces: &controllerNetwork
      - interface: eth0
        dhcp: true
        mtu: 9000
      - interface: eth1
        dhcp: true
        mtu: 9000
    nodeLabels: &controllerNodeLabels
      node.home.arpa/physical: "true"
      node-role.kubernetes.io/control-plane: ''
  - hostname: control-02.home
    ipAddress: 10.0.1.42
    controlPlane: true
    installDiskSelector:
      size: '< 1TB'
    networkInterfaces: *controllerNetwork
    nodeLabels: *controllerNodeLabels
  - hostname: control-03.home
    ipAddress: 10.0.1.44
    controlPlane: true
    installDiskSelector:
      size: '< 1TB'
      type: ssd
    networkInterfaces: *controllerNetwork
    nodeLabels: *controllerNodeLabels
patches:
  - |-
    cluster:
      discovery:
        registries:
          kubernetes:
            disabled: false
          service:
            disabled: true
    machine:
      features:
        kubePrism:
          enabled: true
          port: 7445
        hostDNS:
          forwardKubeDNSToHost: false
      files:
        # configure containerd for spegel
        - content: |
            [plugins]
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false
          path: /etc/cri/conf.d/20-customization.part
          op: create
        # Configure nfs mount options
        - op: overwrite
          path: /etc/nfsmount.conf
          permissions: 0o644
          content: |
            [ NFSMount_Global_Options ]
            hard=True
            noatime=True
            nodiratime=True
            rsize=131072
            wsize=131072
            nconnect=8
      kubelet:
        extraArgs:
          rotate-server-certificates: true
      logging:
        destinations:
          - endpoint: "udp://vector-aggregator.monitoring.${internalDomain}:6051/"
            format: json_lines
      network:
        disableSearchDomain: true
        extraHostEntries:
          - ip: ${clusterEndpointIP}
            aliases:
              - kubernetes.home
      sysctls:
        fs.inotify.max_user_watches: "1048576"
        fs.inotify.max_user_instances: "8192"
        net.core.somaxconn: "65535"
        net.core.rmem_max: 67108864            # Cloudflared / QUIC
        net.core.wmem_max: 67108864            # Cloudflared / QUIC
        net.ipv4.tcp_fastopen: 3               # TCP Fast Open
        net.ipv4.tcp_mtu_probing: 1            # Jumbo frames
        vm.nr_hugepages: 1024                  # Postgres
      time:
        disabled: false
        servers:
          - 10.0.0.1
      udev:
        rules:
          # Intel GPU
          - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
          # Realtec 2.5G USB Adapters
          - ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="0bda", ATTR{idProduct}=="815[2,3,5,6]", ATTR{bConfigurationValue}!="1", ATTR{bConfigurationValue}="1"

worker:
  schematic: &schematic
    customization:
      extraKernelArgs:
        - talos.logging.kernel=udp://vector-aggregator.monitoring.${internalDomain}:6050/   # Logging
        - talos.auditd.disabled=1  # Less security, faster puter
        - net.ifnames=0            # Expected names
        - mitigations=off          # Less security, faster puter
        - apparmor=0               # Less security, faster puter
        - security=none            # Less security, faster puter
        # - init_on_alloc=0          # Less security, faster puter
        # - init_on_free=0           # Less security, faster puter
        # - intel_iommu=on           # PCI Passthrough
        # - iommu=pt                 # PCI Passthrough
      systemExtensions:
        officialExtensions:
          - siderolabs/intel-ucode
          - siderolabs/i915
          - siderolabs/realtek-firmware
          - siderolabs/intel-ice-firmware
  #         - siderolabs/lldpd
  # extensionServices: &extensionServices
  #   - name: lldpd
  #     configFiles:
  #       - content: |
  #           configure lldpd portidsubtype ifname
  #           configure system description "Talos Node"
  #         mountPath: /usr/local/etc/lldpd/lldpd.conf

controlPlane:
  schematic: *schematic
  # extensionServices: *extensionServices
  patches:
    # Disable default API server admission plugins.
    - |-
      - op: replace
        path: /cluster/apiServer/admissionControl
        value: []

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:etcd:backup
            allowedKubernetesNamespaces:
              - backups

    # Cluster Configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        apiServer:
          extraArgs:
            enable-aggregator-routing: true
          resources:
            requests:
              cpu: 400m
              memory: 1.5G
            limits:
              # cpu: 2
              memory: 4G
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              # cpu: 150m
              memory: 400Mi
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
            auto-compaction-retention: 4
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
            limits:
              # cpu: 150m
              memory: 100Mi
