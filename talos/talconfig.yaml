---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: k8s
# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.10.5
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.33.2
endpoint: https://${clusterEndpointIP}:6443

additionalApiServerCertSans: &sans
  - k8s.home
  - ${clusterEndpointIP}
  - 127.0.0.1
  # - ${clusterTalosVIP}

additionalMachineCertSans: *sans

domain: cluster.local

cniConfig:
  name: none

nodes:
  - hostname: node1.home
    controlPlane: true
    ipAddress: 10.0.1.51
    disableSearchDomain: true
    nameservers:
      - 10.0.0.1
      - 10.0.1.1
    installDiskSelector:
      model: KINGSTON OM8PGP41024N-A0
    networkInterfaces:
      - interface: bond0
        addresses:
          - 10.0.1.51/23
        dhcp: false
        mtu: 9000
        bond:
          deviceSelectors:
            # 2.5G Ports
            - pciID: 8086:125*
              driver: igc
          mode: 802.3ad
          xmitHashPolicy: layer3+4
          lacpRate: fast
          miimon: 1000
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
      - deviceSelector: { busPath: 0-1.0 } # power side
        dhcp: false
        mtu: 65520
        addresses: [169.254.255.11/32]
        routes: [{ network: 169.254.255.12/32, metric: 2048 }]
      - deviceSelector: { busPath: 1-1.0 } # nic side
        dhcp: false
        mtu: 65520
        addresses: [169.254.255.11/32]
        routes: [{ network: 169.254.255.13/32, metric: 2048 }]
    nodeLabels:
      node.home.arpa/physical: "true"
      node-role.kubernetes.io/control-plane: ''
    nodeAnnotations:
      installerImage: '{{ .MachineConfig.MachineInstall.InstallImage }}'
  - hostname: node2.home
    controlPlane: true
    ipAddress: 10.0.1.52
    disableSearchDomain: true
    nameservers:
      - 10.0.0.1
      - 10.0.1.1
    installDiskSelector:
      model: KINGSTON OM8PGP41024N-A0
    networkInterfaces:
      - interface: bond0
        addresses:
          - 10.0.1.52/23
        dhcp: false
        mtu: 9000
        bond:
          deviceSelectors:
            # 2.5G Ports
            - pciID: 8086:125*
              driver: igc
          mode: 802.3ad
          xmitHashPolicy: layer3+4
          lacpRate: fast
          miimon: 1000
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
      - deviceSelector: { busPath: 0-1.0 } # power side
        dhcp: false
        mtu: 65520
        addresses: [169.254.255.12/32]
        routes: [{ network: 169.254.255.13/32, metric: 2048 }]
      - deviceSelector: { busPath: 1-1.0 } # nic side
        dhcp: false
        mtu: 65520
        addresses: [169.254.255.12/32]
        routes: [{ network: 169.254.255.11/32, metric: 2048 }]
    nodeLabels:
      node.home.arpa/physical: "true"
      node-role.kubernetes.io/control-plane: ''
    nodeAnnotations:
      installerImage: '{{ .MachineConfig.MachineInstall.InstallImage }}'
  - hostname: node3.home
    controlPlane: true
    ipAddress: 10.0.1.53
    disableSearchDomain: true
    nameservers:
      - 10.0.0.1
      - 10.0.1.1
    installDiskSelector:
      model: KINGSTON OM8PGP41024N-A0
    networkInterfaces:
      - interface: bond0
        addresses:
          - 10.0.1.53/23
        dhcp: false
        mtu: 9000
        bond:
          deviceSelectors:
            # 2.5G Ports
            - pciID: 8086:125*
              driver: igc
          mode: 802.3ad
          xmitHashPolicy: layer3+4
          lacpRate: fast
          miimon: 1000
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.0.1
      - deviceSelector: { busPath: 0-1.0 } # power side
        dhcp: false
        mtu: 65520
        addresses: [169.254.255.13/32]
        routes: [{ network: 169.254.255.11/32, metric: 2048 }]
      - deviceSelector: { busPath: 1-1.0 } # nic side
        dhcp: false
        mtu: 65520
        addresses: [169.254.255.13/32]
        routes: [{ network: 169.254.255.12/32, metric: 2048 }]
    nodeLabels:
      node.home.arpa/physical: "true"
      node-role.kubernetes.io/control-plane: ''
    nodeAnnotations:
      installerImage: '{{ .MachineConfig.MachineInstall.InstallImage }}'
  # - hostname: replacement.home
  #   controlPlane: true
  #   ipAddress: 10.0.1.55
  #   disableSearchDomain: true
  #   nameservers:
  #     - 10.0.0.1
  #     - 10.0.1.1
  #   installDiskSelector:
  #     type: ssd
  #   networkInterfaces:
  #     - interface: bond0
  #       addresses:
  #         - 10.0.1.55/23
  #       dhcp: false
  #       mtu: 9000
  #       bond:
  #         deviceSelectors:
  #           - driver: e1000e # native NIC 1gbe
  #           - driver: r8152 # pluggable / wavlink 2.5gbe
  #         mode: 802.3ad
  #         xmitHashPolicy: layer3+4
  #         lacpRate: fast
  #         miimon: 1000
  #       routes:
  #         - network: 0.0.0.0/0
  #           gateway: 10.0.0.1
  #   nodeLabels:
  #     node.home.arpa/physical: "true"
  #     node-role.kubernetes.io/control-plane: ''
  #   nodeAnnotations:
  #     installerImage: '{{ .MachineConfig.MachineInstall.InstallImage }}'
patches:
  - |-
    machine:
      features:
        kubePrism:
          enabled: true
          port: 7445
        hostDNS:
          enabled: true
          # Incompatible with Cilium bpf masquerade. https://github.com/siderolabs/talos/issues/8836
          forwardKubeDNSToHost: false
      files:
        # configure containerd for spegel
        - content: |
            [plugins."io.containerd.cri.v1.images"]
              discard_unpacked_layers = false
          path: /etc/cri/conf.d/20-customization.part
          permissions: 0o644
          op: create

        # Configure nfs mount options
        - op: overwrite
          path: /etc/nfsmount.conf
          permissions: 0o644
          content: |
            [ NFSMount_Global_Options ]
            hard=True
            noatime=True
            nodiratime=True
            rsize=131072
            wsize=131072
            nconnect=8
      kubelet:
        extraArgs:
          rotate-server-certificates: true
          max-pods: 150
        extraConfig:
          imageGCLowThresholdPercent: 60
          imageGCHighThresholdPercent: 70
          maxParallelImagePulls: 10
          serializeImagePulls: false
      logging:
        destinations:
          - endpoint: "udp://vector-aggregator.monitoring.${internalDomain}:6051/"
            format: json_lines
      network:
        disableSearchDomain: true
        extraHostEntries:
          - ip: ${clusterEndpointIP}
            aliases:
              - k8s.home
      sysctls:
        fs.inotify.max_user_watches: "1048576"
        fs.inotify.max_user_instances: "8192"
        net.core.somaxconn: "65535"
        net.core.rmem_max: 67108864            # Cloudflared / QUIC
        net.core.wmem_max: 67108864            # Cloudflared / QUIC
        net.ipv4.tcp_fastopen: 3               # TCP Fast Open
        net.ipv4.tcp_mtu_probing: 1            # Jumbo frames
        net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
        net.core.default_qdisc: fq             # 10Gb/s
        net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
        net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
        net.ipv4.tcp_window_scaling: 1         # 10Gb/s
        vm.nr_hugepages: 1024                  # Postgres
      sysfs:
        devices.system.cpu.intel_pstate.hwp_dynamic_boost: 1
      time:
        disabled: false
        servers:
          - 10.0.0.1
          - 10.0.1.1
      udev:
        rules:
          # Intel GPU
          - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
          # Thunderbolt
          - ACTION=="add", SUBSYSTEM=="thunderbolt", ATTR{authorized}=="0", ATTR{authorized}="1"
          # Transmit queue length
          - SUBSYSTEM=="net", ACTION=="add", KERNEL=="tap*", ATTR{tx_queue_len}="10000"
          - SUBSYSTEM=="net", ACTION=="add", KERNEL=="tun*", ATTR{tx_queue_len}="10000"
          # set all disks to `none` scheduler (optimal setting for Ceph and ZFS)
          - SUBSYSTEM=="block", ENV{DEVTYPE}=="disk", ATTR{queue/scheduler}="none"
worker:
  schematic: &schematic
    customization:
      extraKernelArgs:
        - talos.logging.kernel=udp://vector-aggregator.monitoring.${internalDomain}:6050/   # Logging
        - talos.auditd.disabled=1  # Less security, faster computer
        - mitigations=off          # Less security, faster computer
        - apparmor=0               # Less security, faster computer
        - security=none            # Less security, faster computer
        - init_on_alloc=0          # Less security, faster computer
        - init_on_free=0           # Less security, faster computer
        - intel_iommu=on           # PCI Passthrough
        - iommu=pt                 # PCI Passthrough
      systemExtensions:
        officialExtensions:
          - siderolabs/intel-ucode
          - siderolabs/i915
          - siderolabs/lldpd
          - siderolabs/gasket-driver
          - siderolabs/mei
          - siderolabs/thunderbolt
  extensionServices: &extensionServices
    - name: lldpd
      configFiles:
        - content: |
            configure lldpd portidsubtype ifname
            configure system description "Talos Node"
          mountPath: /usr/local/etc/lldpd/lldpd.conf

controlPlane:
  schematic: *schematic
  extensionServices: *extensionServices
  # ingressFirewall:
  #   defaultAction: block
  #   rules:
  #     - name: kubelet-ingress
  #       portSelector:
  #         ports:
  #           - 10250
  #         protocol: tcp
  #       ingress:
  #         - subnet: ${CLUSTER_SUBNET}
  #     - name: apid-ingress
  #       portSelector:
  #         ports:
  #           - 50000
  #         protocol: tcp
  #       ingress: &localnet
  #         - subnet: 10.0.0.0/23
  #         - subnet: 192.168.100.0/24
  #     - name: trustd-ingress
  #       portSelector:
  #         ports:
  #           - 50001
  #         protocol: tcp
  #       ingress:
  #         - subnet: ${CLUSTER_SUBNET}
  #     - name: kubernetes-api-ingress
  #       portSelector:
  #         ports:
  #           - 6443
  #         protocol: tcp
  #       ingress: *localnet
  #     - name: etcd-ingress
  #       portSelector:
  #         ports:
  #           - 2379-2380
  #         protocol: tcp
  #       ingress:
  #         - subnet: $CONTROL1/32
  #         - subnet: $CONTROL2/32
  #         - subnet: $CONTROL3/32

  patches:
    # Enable thunderbolt + net
    - |-
      machine:
        kernel:
          modules:
            - name: nbd
            - name: thunderbolt
            - name: thunderbolt_net

    # Disable default API server admission plugins.
    - |-
      - op: replace
        path: /cluster/apiServer/admissionControl
        value: []

    # Enable MutatingAdmissionPolicy
    - |-
      cluster:
        apiServer:
          extraArgs:
            runtime-config: admissionregistration.k8s.io/v1alpha1=true
            feature-gates: MutatingAdmissionPolicy=true

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:etcd:backup
            allowedKubernetesNamespaces:
              - backups

    # Cluster Configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        apiServer:
          extraArgs:
            enable-aggregator-routing: true
          resources:
            requests:
              cpu: 400m
              memory: 1.5G
            limits:
              # cpu: 2
              memory: 4G
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              # cpu: 150m
              memory: 400Mi
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
            auto-compaction-retention: 4
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
            limits:
              # cpu: 150m
              memory: 100Mi

    # Spegel
    - |
      cluster:
        scheduler:
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                plugins:
                  score:
                    disabled:
                      - name: ImageLocality

    # Bootstrap manifests
    - |-
      cluster:
        extraManifests:
          - # renovate: datasource=github-releases depName=kubernetes-sigs/gateway-api
            https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.3.0/experimental-install.yaml
          - # renovate: datasource=github-releases depName=prometheus-operator/prometheus-operator
            https://github.com/prometheus-operator/prometheus-operator/releases/download/v0.82.0/stripped-down-crds.yaml
