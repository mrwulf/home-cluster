---
version: "3"

vars:
  HOSTS_LIST:
    sh: "kubectl get node -ojsonpath='{.items[*].status.addresses[?(.type == \"Hostname\")].address}' | tr ' ' ','"
    # sh: talosctl get hostname --output=json | jq '.spec.hostname' | sed -z 's/\n$//' | tr -s '\n' ','
  ONE_ETCD_MASTER:
    sh: talosctl -n {{.HOSTS_LIST}} get etcdsecret --output=json | jq '.node' | head -n1

tasks:
  list:
    desc: List all the hosts
    silent: true
    cmds:
      - |
        echo {{.HOSTS_LIST}}

  backup-etcd:
    desc: Backup etcd to local file
    silent: true
    cmds:
      - |
        mkdir -p {{.PROJECT_DIR}}/talos/backups
        DATE=$(date +'%Y%m%d-%H%M%S')
        talosctl -n {{.ONE_ETCD_MASTER}} etcd snapshot {{.PROJECT_DIR}}/talos/backups/etcd-snapshot.$DATE
        ls -tr {{.PROJECT_DIR}}/talos/backups/etcd-snapshot.* | head -n -3 | xargs rm -f

  debug:
    desc: Create a privileged container on a node for debugging, ex. NODE=anvil task debug-node
    interactive: true
    silent: true
    cmds:
      - kubectl get node -owide '{{.CLI_ARGS}}' || (echo 'Node {{.CLI_ARGS}} is invalid!' && exit -1)
      - |
        kubectl run debug-{{.CLI_ARGS}} -i --tty --rm --image=null --privileged --overrides='
          {
            "spec": {
              "nodeSelector": {
                "kubernetes.io/hostname": "{{.CLI_ARGS}}"
              },
              "containers": [
                {
                  "name": "debug",
                  "image": "fedora:36",
                  "command": [
                    "/bin/bash"
                  ],
                  "stdin": true,
                  "stdinOnce": true,
                  "tty": true,
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "dnf install -y util-linux htop procps gdisk &"
                        ]
                      }
                    }
                  }
                }
              ],
              "restartPolicy": "Never"
            }
          }'

  dashboard:
    desc: Show the Talos dashboard with all the hosts
    silent: true
    cmds:
      - |
        talosctl -n {{.HOSTS_LIST}} dashboard

  ctl:
    desc: Talosctl with all the hosts
    silent: true
    cmds:
      - |
        talosctl -n {{.HOSTS_LIST}} {{.CLI_ARGS | default "--help"}}

  theila:
    desc: Show the Theila web-ui dashboard with all the hosts
    silent: true
    cmds:
      - |
        docker pull ghcr.io/siderolabs/theila:latest
        xdg-open http://localhost:8080/
        docker run --rm -it --volume ${HOME}/.talos/config:/opt/talosconfig:ro --env TALOSCONFIG=/opt/talosconfig --publish 8080:8080 ghcr.io/siderolabs/theila:latest --address 0.0.0.0
