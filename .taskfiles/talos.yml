---
version: "3"

vars:
  HOSTS_LIST:
    sh: "kubectl get node -ojsonpath='{.items[*].status.addresses[?(.type == \"Hostname\")].address}' | tr ' ' ','"
    # sh: talosctl get hostname --output=json | jq '.spec.hostname' | sed -z 's/\n$//' | tr -s '\n' ','
  ONE_ETCD_MASTER:
    sh: talosctl -n {{.HOSTS_LIST}} get etcdsecret --output=json 2>/dev/null | jq '.node' | head -n1 | tr -d '"'
  CLUSTER_NAME:
    sh: "yq '.clusterName' talos/talconfig.yaml"

tasks:
  list:
    desc: List all the hosts
    silent: true
    cmds:
      - |
        echo {{.HOSTS_LIST}}

  get-master:
    silent: true
    cmds:
      - echo {{.ONE_ETCD_MASTER}}

  backup-etcd:
    desc: Backup etcd to local file
    silent: true
    cmds:
      - |
        mkdir -p {{.PROJECT_DIR}}/talos/backups
        DATE=$(date +'%Y%m%d-%H%M%S')
        talosctl -n {{.ONE_ETCD_MASTER}} etcd snapshot {{.PROJECT_DIR}}/talos/backups/etcd-snapshot.$DATE
        ls -tr {{.PROJECT_DIR}}/talos/backups/etcd-snapshot.* | head -n -3 | xargs rm -f

  debug-node:
    desc: Create a privileged container on a node for debugging, ex. task talos:debug-node -- <node-name>
    interactive: true
    silent: true
    vars:
      NODE: '{{.CLI_ARGS | default .ONE_ETCD_MASTER}}'
    cmds:
      - kubectl debug node/{{.NODE}} -it --image=fedora:36 -- bash

  dashboard:
    desc: Show the Talos dashboard with all the hosts
    silent: true
    cmds:
      - |
        talosctl -n {{.HOSTS_LIST}} dashboard

  ctl:
    desc: Talosctl with all the hosts
    silent: true
    cmds:
      - |
        talosctl -n {{.HOSTS_LIST}} {{.CLI_ARGS | default "--help"}}

  theila:
    desc: Show the Theila web-ui dashboard with all the hosts
    silent: true
    cmds:
      - |
        docker pull ghcr.io/siderolabs/theila:latest
        xdg-open http://localhost:8080/
        docker run --rm -it --volume ${HOME}/.talos/config:/opt/talosconfig:ro --env TALOSCONFIG=/opt/talosconfig --publish 8080:8080 ghcr.io/siderolabs/theila:latest --address 0.0.0.0

  generate-configs:
    desc: Use talhelper to regenerate individual node configs
    silent: true
    generates:
      - "{{.PROJECT_DIR}}/talos/clusterconfig/*"
      - "{{.PROJECT_DIR}}/talos/clusterconfig/talosconfig"
      - "{{.PROJECT_DIR}}/talos/clusterconfig/.gitignore"
    cmds:
      - |
        pushd {{.PROJECT_DIR}}/talos/
        talhelper genconfig
        popd

  diff-config:
    desc: Diff config against running node config
    vars:
      NODE: '{{.CLI_ARGS | default .ONE_ETCD_MASTER}}'
    cmds:
      - |
        talosctl apply-config --dry-run -n {{.NODE}} -f {{.PROJECT_DIR}}/talos/clusterconfig/{{.CLUSTER_NAME}}-{{.NODE}}.yaml

  apply-config:
    desc: Apply config against running node config
    vars:
      NODE: '{{.CLI_ARGS}}'
    preconditions:
      - sh: "[ '' -eq {{.NODE}} ]"
        msg: Node Required!
    cmds:
      - |
        talosctl apply-config -n {{.NODE}} -f {{.PROJECT_DIR}}/talos/clusterconfig/{{.CLUSTER_NAME}}-{{.NODE}}.yaml
