---
version: "3"

vars:
  OS:
    sh: "uname -s | tr '[:upper:]' '[:lower:]'"
  ARCH_OS:
    sh: "arch"
  ARCH: '{{if eq .ARCH_OS "x86_64"}}amd64{{else}}{{.ARCH_OS}}{{end}}'
  head: '{{if eq .OS "darwin"}}g{{end}}head'
  grep: '{{if eq .OS "darwin"}}g{{end}}grep'

tasks:
  all:
    desc: Install all of the dependencies & tools
    cmds:
      - task: talosctl
      - task: talhelper
      - task: go-task
      - task: yq
      # - task: jq
      - task: age
      - task: sops
      # - task: kubestr # Doesn't return version info --- downloads each run
      - task: kubectl
      - task: kustomize
      - task: flux
      - task: helm
      - task: pre-commit
      # - task: krew & plugins (ns, cilium, cnpg, stern)
      # - task: dyff
      # - task: kustomize
      - task: cilium

  age:
    desc: Install age
    vars:
      APP_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: FiloSottile
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.APP_NAME}}/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.APP_NAME}} --version | {{.grep}} -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "{{.APP_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        TEMP_DIR=$(mktemp -d)
        wget -qnv --progress=bar -O $TEMP_DIR/{{.APP_NAME}}.tar.gz https://github.com/{{.OWNER}}/{{.APP_NAME}}/releases/download/v{{.RELEASE_VERSION}}/{{.APP_NAME}}-v{{.RELEASE_VERSION}}-linux-amd64.tar.gz
        tar -xzf ${TEMP_DIR}/{{.APP_NAME}}.tar.gz --strip-components=1 -C ~/bin/ age/{{.APP_NAME}} age/{{.APP_NAME}}-keygen
        # chmod +x ~/bin/{{.APP_NAME}}
        rm -rf $TEMP_DIR
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  kustomize:
    desc: Install kustomize
    dir: "${HOME}/bin"
    cmds:
      - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    status:
      - 'command -v kustomize'
    silent: true
    ignore_errors: true

  go-task:
    desc: Update go-task
    vars:
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/go-task/task/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "task  --version | {{.grep}} -oP 'v[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "Go-Task released: v{{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        if [ command -v dnf ]; then
          sudo dnf install -y https://github.com/go-task/task/releases/download/v{{.RELEASE_VERSION}}/task_linux_amd64.rpm
        else
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/bin
        fi
    status:
      - '[ "v{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  sops:
    desc: Install sops
    vars:
      APP_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: mozilla
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.APP_NAME}}/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.APP_NAME}} --version | {{.grep}} -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "{{.APP_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        wget -qnv --progress=bar -O ~/bin/sops https://github.com/getsops/sops/releases/download/v{{.RELEASE_VERSION}}/sops-v{{.RELEASE_VERSION}}.{{.OS}}.amd64
        chmod +x ~/bin/sops
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  talhelper:
    desc: Install talhelper
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: budimanjojo
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.TASK_NAME}}/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.TASK_NAME}} --version | {{.grep}} -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
      DESIRED_VERSION: '{{.DESIRED_VERSION | default .RELEASE_VERSION}}'
    cmds:
      - |
        echo "{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}, desired: v{{.DESIRED_VERSION}}"
        TEMP_DIR=$(mktemp -d)
        wget -qnv --progress=bar -O $TEMP_DIR/{{.TASK_NAME}}.tar.gz https://github.com/{{.OWNER}}/{{.TASK_NAME}}/releases/download/v{{.DESIRED_VERSION}}/talhelper_linux_amd64.tar.gz
        tar -xzf ${TEMP_DIR}/{{.TASK_NAME}}.tar.gz --strip-components=0 -C ~/bin/ {{.TASK_NAME}}
        # chmod +x ~/bin/{{.TASK_NAME}}
        rm -rf $TEMP_DIR
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  talosctl:
    desc: Install talosctl
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/siderolabs/talos/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      DESIRED_VERSION: '{{.DESIRED_VERSION | default .RELEASE_VERSION}}'
      CURRENT_VERSION:
        sh: "talosctl version --client | {{.grep}} 'Tag:' | {{.grep}} -oP 'v[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}, desired: v{{.DESIRED_VERSION}}"
        wget -qnv --progress=bar -O ~/bin/talosctl https://github.com/siderolabs/talos/releases/download/v{{.DESIRED_VERSION}}/talosctl-{{.OS}}-{{.ARCH}}
        chmod +x ~/bin/talosctl
    status:
      - '[ "v{{.DESIRED_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  yq:
    desc: Install yq
    vars:
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/mikefarah/yq/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "yq --version | {{.grep}} -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "yq released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        wget -qnv --progress=bar -O ~/bin/yq https://github.com/mikefarah/yq/releases/download/v{{.RELEASE_VERSION}}/yq_linux_amd64
        chmod +x ~/bin/yq
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  kubestr:
    desc: Install kubestr
    silent: true
    ignore_errors: true
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: kastenhq
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.TASK_NAME}}/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.TASK_NAME}} version | {{.grep}} -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
      FILENAME: "kubestr_{{.RELEASE_VERSION}}_Linux_amd64.tar.gz"
    status:
      - '[ "{{.RELEASE_VERSION}}" = "{{.CURRENT_VERSION}}" ]'
    cmds:
      - |
        echo '{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}'
        TEMP_DIR=$(mktemp -d)
        wget -qnv --progress=bar -O $TEMP_DIR/{{.TASK_NAME}}.tar.gz https://github.com/{{.OWNER}}/{{.TASK_NAME}}/releases/download/v{{.RELEASE_VERSION}}/{{.FILENAME}}
        tar -xzf ${TEMP_DIR}/{{.TASK_NAME}}.tar.gz --strip-components=0 -C ~/bin/ {{.TASK_NAME}}
        # chmod +x ~/bin/{{.TASK_NAME}}
        rm -rf $TEMP_DIR

  kubectl:
    desc: Install kubectl
    vars:
      APP_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: mozilla
      RELEASE_VERSION:
        sh: curl -L -s https://dl.k8s.io/release/stable.txt
      CURRENT_VERSION:
        sh: "~/bin/{{.APP_NAME}} version | {{.grep}} Client | {{.grep}} -oP 'v[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "{{.APP_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"

        wget -qnv --progress=bar -O ~/bin/kubectl dl.k8s.io/{{.RELEASE_VERSION}}/bin/linux/amd64/kubectl
        chmod +x ~/bin/kubectl
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  flux:
    desc: Install flux
    silent: true
    ignore_errors: true
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: fluxcd
      PROJECT: flux2 # '{{.PROJECT | default .TASK_NAME}}'
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.PROJECT}}/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      DESIRED_VERSION: '{{.DESIRED_VERSION | default .RELEASE_VERSION}}'
      CURRENT_VERSION:
        sh: "{{.TASK_NAME}} version | {{.grep}} -oPm1 '[0-9]+.[0-9]+.[0-9]+(-.+)?$' || echo 0.0.0"
      FILENAME: "{{.TASK_NAME}}_{{.DESIRED_VERSION}}_{{.OS}}_{{.ARCH}}.tar.gz"
    status:
      - '[ "{{.DESIRED_VERSION}}" = {{.CURRENT_VERSION}} ]'
    cmds:
      - |
        echo "{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}, desired: {{.DESIRED_VERSION}}"
        TEMP_DIR=$(mktemp -d)
        wget -qnv --progress=bar -O $TEMP_DIR/{{.TASK_NAME}}.tar.gz https://github.com/{{.OWNER}}/{{.PROJECT}}/releases/download/v{{.DESIRED_VERSION}}/{{.FILENAME}}
        tar -xzf ${TEMP_DIR}/{{.TASK_NAME}}.tar.gz --strip-components=0 -C ~/bin/ {{.TASK_NAME}}
        # chmod +x ~/bin/{{.TASK_NAME}}
        rm -rf $TEMP_DIR
        ~/bin/{{.TASK_NAME}} version

  helm:
    desc: Install helm
    silent: true
    ignore_errors: true
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: helm
      PROJECT: '{{.PROJECT | default .TASK_NAME}}'
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.PROJECT}}/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      DESIRED_VERSION: '{{.DESIRED_VERSION | default .RELEASE_VERSION}}'
      CURRENT_VERSION:
        sh: '{{.TASK_NAME}} version | {{.grep}} -oP -m1 "[0-9]+\.[0-9]+\.[0-9]+(-.+)?\s*" | {{.head}} -1 || echo 0.0.0'
      FILENAME: "{{.TASK_NAME}}-v{{.DESIRED_VERSION}}-linux-amd64.tar.gz"
      STRIP_COMPONENTS: 1
    status:
      - '[ "{{.DESIRED_VERSION}}" = "{{.CURRENT_VERSION}}" ]'
    cmds:
      - |
        echo '{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}, desired: {{.DESIRED_VERSION}}'
        TEMP_DIR=$(mktemp -d)
        wget -qnv --progress=bar -O $TEMP_DIR/{{.TASK_NAME}}.tar.gz https://get.helm.sh/{{.FILENAME}}
        tar -xzf ${TEMP_DIR}/{{.TASK_NAME}}.tar.gz --strip-components={{.STRIP_COMPONENTS}} -C ~/bin/ linux-amd64/{{.TASK_NAME}}
        # chmod +x ~/bin/{{.TASK_NAME}}
        rm -rf $TEMP_DIR
        ~/bin/{{.TASK_NAME}} version
        # Probably should be seperate
        helm plugin install https://github.com/databus23/helm-diff

  pre-commit:
    desc: Install pre-commit
    silent: true
    ignore_errors: true
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: pre-commit
      PROJECT: '{{.PROJECT | default .TASK_NAME}}'
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.PROJECT}}/releases/latest\" | {{.grep}} -Po '\"tag_name\":\\s*\"v\\K.*?(?=\")'"
      DESIRED_VERSION: '{{.DESIRED_VERSION | default .RELEASE_VERSION}}'
      CURRENT_VERSION:
        sh: '{{.TASK_NAME}} -V | {{.grep}} -oP -m1 "[0-9]+\.[0-9]+\.[0-9]+(-.+)?\s*" | {{.head}} -1 || echo 0.0.0'
    status:
      - '[ "{{.DESIRED_VERSION}}" = {{.CURRENT_VERSION}} ]'
    cmds:
      - |
        echo "{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}, desired: {{.DESIRED_VERSION}}"
        if [ $( command -v pip ) ]; then
          pip install pre-commit --upgrade
          pre-commit autoupdate
          pre-commit gc
        else
          echo "pre-commit unavailable in this context"
        fi

  cilium:
    desc: Install ciliumcli
    silent: true
    ignore_errors: true
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      RELEASE_VERSION:
        sh: 'curl -s https://raw.githubusercontent.com/cilium/cilium-cli/master/stable.txt'
      DESIRED_VERSION: '{{.DESIRED_VERSION | default .RELEASE_VERSION}}'
      CURRENT_VERSION:
        sh: 'echo -n "v" | cat - <({{.TASK_NAME}} version --client | {{.grep}} "cli" | {{.grep}} -oP -m1 "[0-9]+\.[0-9]+\.[0-9]+(-.+)?\s*" | {{.head}} -1 ) || echo v0.0.0'
    status:
      - '[ "{{.DESIRED_VERSION}}" = {{.CURRENT_VERSION}} ]'
    cmds:
      - |
        echo "{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}, desired: {{.DESIRED_VERSION}}"
        TEMP_DIR=$(mktemp -d)
        wget -qnv --progress=bar -O $TEMP_DIR/cilium-{{.OS}}-{{.ARCH}}.tar.gz https://github.com/cilium/cilium-cli/releases/download/{{.DESIRED_VERSION}}/cilium-{{.OS}}-{{.ARCH}}.tar.gz
        wget -qnv --progress=bar -O $TEMP_DIR/cilium-{{.OS}}-{{.ARCH}}.tar.gz.sha256sum https://github.com/cilium/cilium-cli/releases/download/{{.DESIRED_VERSION}}/cilium-{{.OS}}-{{.ARCH}}.tar.gz.sha256sum
        (cd $TEMP_DIR && sha256sum --check cilium-{{.OS}}-{{.ARCH}}.tar.gz.sha256sum)
        tar xzvfC $TEMP_DIR/cilium-{{.OS}}-{{.ARCH}}.tar.gz ~/bin/
        rm -rf $TEMP_DIR
        ~/bin/{{.TASK_NAME}} version
