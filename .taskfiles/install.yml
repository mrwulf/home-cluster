---
version: "3"

tasks:
  all:
    desc: Install all of the dependencies & tools
    cmds:
      - task: talosctl
      - task: talhelper
      - task: go-task
      - task: yq
      - task: age
      - task: sops
      - task: kubestr
      # - task: kubectl
      # - task: flux
      # - task: helm
      # - task: pre-commit # should include pre-commit autoupdate
      # - task: krew & plugins
      # - task: dyff

  age:
    desc: Install age
    vars:
      APP_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: FiloSottile
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.APP_NAME}}/releases/latest\" | grep -Po '\"tag_name\": \"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.APP_NAME}} --version | grep -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "{{.APP_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        TEMP_DIR=$(mktemp -d)
        wget -qnv --show-progress -O $TEMP_DIR/{{.APP_NAME}}.tar.gz https://github.com/{{.OWNER}}/{{.APP_NAME}}/releases/download/v{{.RELEASE_VERSION}}/{{.APP_NAME}}-v{{.RELEASE_VERSION}}-linux-amd64.tar.gz
        tar -xzf ${TEMP_DIR}/{{.APP_NAME}}.tar.gz --strip-components=1 -C ~/bin/ age/{{.APP_NAME}} age/{{.APP_NAME}}-keygen
        # chmod +x ~/bin/{{.APP_NAME}}
        rm -rf $TEMP_DIR
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  go-task:
    desc: Update go-task
    vars:
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/go-task/task/releases/latest\" | grep -Po '\"tag_name\": \"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "task  --version | grep -oP 'v[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "Go-Task released: v{{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        sudo dnf install -y https://github.com/go-task/task/releases/download/v{{.RELEASE_VERSION}}/task_linux_amd64.rpm
    status:
      - '[ "v{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  sops:
    desc: Install sops
    vars:
      APP_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: mozilla
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.APP_NAME}}/releases/latest\" | grep -Po '\"tag_name\": \"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.APP_NAME}} --version | grep -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "{{.APP_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        sudo dnf install -y https://github.com/{{.OWNER}}/{{.APP_NAME}}/releases/download/v{{.RELEASE_VERSION}}/{{.APP_NAME}}-{{.RELEASE_VERSION}}-1.x86_64.rpm
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  talhelper:
    desc: Install talhelper
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: budimanjojo
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.TASK_NAME}}/releases/latest\" | grep -Po '\"tag_name\": \"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.TASK_NAME}} --version | grep -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        TEMP_DIR=$(mktemp -d)
        wget -qnv --show-progress -O $TEMP_DIR/{{.TASK_NAME}}.tar.gz https://github.com/{{.OWNER}}/{{.TASK_NAME}}/releases/download/v{{.RELEASE_VERSION}}/talhelper_linux_amd64.tar.gz
        tar -xzf ${TEMP_DIR}/{{.TASK_NAME}}.tar.gz --strip-components=0 -C ~/bin/ {{.TASK_NAME}}
        # chmod +x ~/bin/{{.TASK_NAME}}
        rm -rf $TEMP_DIR
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  talosctl:
    desc: Install talosctl
    vars:
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/siderolabs/talos/releases/latest\" | grep -Po '\"tag_name\": \"v\\K.*?(?=\")'"
      DESIRED_VERSION: '{{.DESIRED_VERSION | default .RELEASE_VERSION}}'
      CURRENT_VERSION:
        sh: "talosctl version --client | grep 'Tag:' | grep -oP 'v[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "talosctl released: v{{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}, desired: v{{.DESIRED_VERSION}}"
        wget -qnv --show-progress -O ~/bin/talosctl https://github.com/siderolabs/talos/releases/download/v{{.DESIRED_VERSION}}/talosctl-linux-amd64
        chmod +x ~/bin/talosctl
    status:
      - '[ "v{{.DESIRED_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  yq:
    desc: Install yq
    vars:
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/mikefarah/yq/releases/latest\" | grep -Po '\"tag_name\": \"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "yq --version | grep -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
    cmds:
      - |
        echo "yq released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        wget -qnv --show-progress -O ~/bin/yq https://github.com/mikefarah/yq/releases/download/v{{.RELEASE_VERSION}}/yq_linux_amd64
        chmod +x ~/bin/yq
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    silent: true
    ignore_errors: true

  kubestr:
    desc: Install talhelper
    silent: true
    ignore_errors: true
    vars:
      TASK_NAME:
        sh: "echo {{.TASK}} | awk -F: '{print $(NF)}'"
      OWNER: kastenhq
      RELEASE_VERSION:
        sh: "wget -qO - \"https://api.github.com/repos/{{.OWNER}}/{{.TASK_NAME}}/releases/latest\" | grep -Po '\"tag_name\": \"v\\K.*?(?=\")'"
      CURRENT_VERSION:
        sh: "{{.TASK_NAME}} version | grep -oP '[0-9]+.[0-9]+.[0-9]+' || echo 0.0.0"
      FILENAME: "kubestr_{{.RELEASE_VERSION}}_Linux_amd64.tar.gz"
    status:
      - '[ "{{.RELEASE_VERSION}}" = {{.CURRENT_VERSION}} ]'
    cmds:
      - |
        echo "{{.TASK_NAME}} released: {{.RELEASE_VERSION}}, current: {{.CURRENT_VERSION}}"
        TEMP_DIR=$(mktemp -d)
        wget -qnv --show-progress -O $TEMP_DIR/{{.TASK_NAME}}.tar.gz https://github.com/{{.OWNER}}/{{.TASK_NAME}}/releases/download/v{{.RELEASE_VERSION}}/{{.FILENAME}}
        tar -xzf ${TEMP_DIR}/{{.TASK_NAME}}.tar.gz --strip-components=0 -C ~/bin/ {{.TASK_NAME}}
        # chmod +x ~/bin/{{.TASK_NAME}}
        rm -rf $TEMP_DIR
